export SpecificDefaultSupplyRange is 2500.0 * Metre //250m in game //utilisé par le halo également
export StandardSupply is TSupplyDescriptor
(
    // Rayon par défaut de la zone de ravitaillement, cette valeur est utilisée si
    // aucun rayon n'est défini dans l'ODS
    DefaultSupplyRange = SpecificDefaultSupplyRange

    // Tous les ravitaillement sont découpé en deux variables
    // 1 -> SupplyBySecond => Nombre de point de la ressource concerné ravitaillé par seconde
    // 2 -> SupplyCostBySecond => Le nombre de point de ravitaillement que coûte le ravitaillement ci dessus.
    //
    // Exemple :
    // FuelSupplyBySecond = 1
    // FuelSupplyCostBySecond = 10
    //
    // Une unité ravitaillée en essence recevra un point d'essence par seconde, et ce ravitaillement
    // coûtera 10 points de ravitaillement a la FOB

    // Point d'essence ravitaillés par seconde
    FuelSupplyBySecond = 30
    // Cout du ravitaillement d'essence par seconde
    FuelSupplyCostBySecond =  1.5

    // Point de vie ravitaillés par seconde
    HealthSupplyBySecond = 0.10 //0.00001
    // Cout du ravitaillement de point de vie par seconde
    HealthSupplyCostBySecond = 3 // 0.00001

    // Point de ravitaillement ravitaillés par seconde
    SupplySupplyBySecond = 20 //30
    // Cout du ravitaillement de point de ravitaillement par seconde
    SupplySupplyCostBySecond = 20 //30

    // Point de munition ravitaillés par seconde
    AmmunitionSupplyBySecond = 60

    // Points de "critique" réparés par seconde
    CriticsSupplyBySecond = 10
    // Coût de la réparation de "critique" par seconde
    CriticsSupplyCostBySecond = 20

    FeedbackDrawer = ~/SupplyFeedbackDrawer
)

SupplyFeedbackDrawer is TSupplyFeedbackDrawer
(
    LineColor = RGBA[244, 187, 50, 170]
    ZOffset = 250.0
    LineThickness = 600.0
    FeedbackDescriptor = ~/SupplyFeedbackDescriptor
)

SupplyFeedbackDescriptor is TSupplyFeedbackDescriptor
(
    FeedbackScreenResilienceDuration = 3.0
    FeedbackFadeOutTime = 1.0
)


export IFVSupplyRange is 600.0 * Metre 
export IFVSupply is TSupplyDescriptor
(
    DefaultSupplyRange = IFVSupplyRange

    FuelSupplyBySecond = 0
    FuelSupplyCostBySecond = 0

    HealthSupplyBySecond = 0
    HealthSupplyCostBySecond = 0

    SupplySupplyBySecond = 20
    SupplySupplyCostBySecond = 20

    AmmunitionSupplyBySecond = 60

    CriticsSupplyBySecond = 10
    CriticsSupplyCostBySecond = 20

    FeedbackDrawer = ~/IFVSupplyFeedbackDrawer
)

IFVSupplyFeedbackDrawer is TSupplyFeedbackDrawer
(
    LineColor = RGBA[92, 187, 245, 170]
    ZOffset = 250.0
    LineThickness = 150.0
    FeedbackDescriptor = ~/IFVSupplyFeedbackDescriptor
)

IFVSupplyFeedbackDescriptor is TSupplyFeedbackDescriptor
(
    FeedbackScreenResilienceDuration = 1.0
    FeedbackFadeOutTime = 1.0
)


export TransportSupplyRange is 1250.0 * Metre 
export TransportSupply is TSupplyDescriptor
(
    DefaultSupplyRange = TransportSupplyRange

    FuelSupplyBySecond = 0
    FuelSupplyCostBySecond = 0

    HealthSupplyBySecond = 0
    HealthSupplyCostBySecond = 0

    SupplySupplyBySecond = 20
    SupplySupplyCostBySecond = 20

    AmmunitionSupplyBySecond = 60

    CriticsSupplyBySecond = 10
    CriticsSupplyCostBySecond = 20

    FeedbackDrawer = ~/TransportSupplyFeedbackDrawer
)

TransportSupplyFeedbackDrawer is TSupplyFeedbackDrawer
(
    LineColor = RGBA[238, 160, 104, 150]
    ZOffset = 250.0
    LineThickness = 150.0
    FeedbackDescriptor = ~/TransportSupplyFeedbackDescriptor
)

TransportSupplyFeedbackDescriptor is TSupplyFeedbackDescriptor
(
    FeedbackScreenResilienceDuration = 1.0
    FeedbackFadeOutTime = 1.0
)
