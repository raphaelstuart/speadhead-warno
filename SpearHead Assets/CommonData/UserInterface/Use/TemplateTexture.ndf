
template TUIResourceTexture_Common
[
    FileName : string,
    SynchroneTextureSourceCarac : TTextureSourceCarac_FromFile = nil,
] is TUIResourceTexture
(
    FileName = <FileName>
    UsefulnessMask = CivMask/Common + TypeMask/Common
    SynchroneTextureSourceCarac = <SynchroneTextureSourceCarac>
    ContentType = ContentType_Texture_UI_Common
)

template TUIResourceTexture_CommonNoGen
[
    FileName : string,
    SynchroneTextureSourceCarac : TTextureSourceCarac_FromFile = nil,
] is TUIResourceTexture
(
    FileName = <FileName>
    UsefulnessMask = TypeMask/Common
    SynchroneTextureSourceCarac = <SynchroneTextureSourceCarac>
    ContentType = ContentType_Texture_UI_Common
)

template TUIResourceTexture_CommonModded
[
    FileName : string
] is TUIResourceTexture
(
    FileName = "Mod:/AssetsModding/" + <FileName>
    UsefulnessMask = CivMask/TextureModding + TypeMask/Common
    ContentType = ContentType_Texture_UI_Common
)

template TUIResourceTexture_OutGame
[
    FileName : string
] is TUIResourceTexture
(
    FileName = <FileName>
    UsefulnessMask = CivMask/Common + TypeMask/OutGameInterface
    ContentType = ContentType_Texture_UI_Outgame
)

template TUIResourceTexture_LoadingScreen
[
    FileName : string
] is TUIResourceTexture
(
    FileName = "GameData:/Assets/2D/Interface/UseOutGame/loading_screen/" + <FileName>
    UsefulnessMask = CivMask/Common + TypeMask/LoadingScreen
    ContentType = ContentType_Texture_UI_Outgame
    LoadOnUsage = True
)

template TUIResourceTexture_OutGameNoGen
[
    FileName : string,
    SynchroneTextureSourceCarac : TTextureSourceCarac_FromFile = nil
] is TUIResourceTexture
(
    FileName = <FileName>
    UsefulnessMask = TypeMask/OutGameInterface
    SynchroneTextureSourceCarac = <SynchroneTextureSourceCarac>
    ContentType = ContentType_Texture_UI_Outgame
)

template TUIResourceTexture_OutGameModded
[
    FileName : string
] is TUIResourceTexture
(
    FileName = "Mod:/AssetsModding/" + <FileName>
    UsefulnessMask = CivMask/TextureModding + TypeMask/OutGameInterface
    ContentType = ContentType_Texture_UI_Outgame
)

template TUIResourceTexture_InGame
[
    FileName : string
] is TUIResourceTexture
(
    FileName = <FileName>
    UsefulnessMask = CivMask/Common + TypeMask/InGameInterface
    ContentType = ContentType_Texture_UI_Ingame
)

template TUIResourceTexture_InGameNoGen
[
    FileName : string,
    SynchroneTextureSourceCarac : TTextureSourceCarac_FromFile = nil
] is TUIResourceTexture
(
    FileName = <FileName>
    UsefulnessMask = TypeMask/InGameInterface
    SynchroneTextureSourceCarac = <SynchroneTextureSourceCarac>
    ContentType = ContentType_Texture_UI_Ingame
)

template TUIResourceTexture_InGameModded
[
    FileName : string
] is TUIResourceTexture
(
    FileName = "Mod:/AssetsModding/" + <FileName>
    UsefulnessMask = CivMask/TextureModding + TypeMask/InGameInterface
    ContentType = ContentType_Texture_UI_Ingame
)

template TUIResourceTexture_AfterMaster
[
    FileName : string
] is TUIResourceTexture
(
    FileName = <FileName>
    UsefulnessMask = CivMask/Common + TypeMask/InterfaceAfterMaster
    ContentType = ContentType_Texture_UI_AfterMaster
)

template TUIResourceTexture_MapPack
[
    FileName : string
] is TUIResourceTexture
(
    FileName = <FileName>
    UsefulnessMask = CivMask/Common + TypeMask/OutGameMap
    ContentType = ContentType_Texture_UI_Map
)

//------------------------ DLC ------------------------------------

template TUIResourceTexture_Common_UnlockedByDLC
[
    FileName : string,
    FileNameToUseWhenOptionDisabled : string,
    SynchroneTextureSourceCarac : TTextureSourceCarac_FromFile = nil,
    DlcId : int
] is TUIResourceTextureUnlockedByDLC
(
    FileName = <FileName>
    FileNameToUseWithDlc = <FileNameToUseWithDlc>
    SynchroneTextureSourceCarac = <SynchroneTextureSourceCarac>
    DlcId = <DlcId>
    UsefulnessMask = CivMask/Common + TypeMask/Common
    ContentType = ContentType_Texture_UI_Common
)

template TUIResourceTexture_CommonNoGen_UnlockedByDLC
[
    FileName : string,
    FileNameToUseWithDlc : string,
    SynchroneTextureSourceCarac : TTextureSourceCarac_FromFile = nil,
    DlcId : int
] is TUIResourceTextureUnlockedByDLC
(
    FileName = <FileName>
    FileNameToUseWithDlc = <FileNameToUseWithDlc>
    SynchroneTextureSourceCarac = <SynchroneTextureSourceCarac>
    DlcId = <DlcId>
    UsefulnessMask = TypeMask/Common
    ContentType = ContentType_Texture_UI_Common
)

template TUIResourceTexture_OutGame_UnlockedByDLC
[
    FileName : string,
    FileNameToUseWithDlc : string,
    DlcId : int
] is TUIResourceTextureUnlockedByDLC
(
    FileName = <FileName>
    FileNameToUseWithDlc = <FileNameToUseWithDlc>
    DlcId = <DlcId>
    UsefulnessMask = CivMask/Common + TypeMask/OutGameInterface
    ContentType = ContentType_Texture_UI_Outgame
)

template TUIResourceTexture_InGame_UnlockedByDLC
[
    FileName : string,
    FileNameToUseWithDlc : string,
    DlcId : int
] is TUIResourceTextureUnlockedByDLC
(
    FileName = <FileName>
    FileNameToUseWithDlc = <FileNameToUseWithDlc>
    DlcId = <DlcId>
    UsefulnessMask = CivMask/Common + TypeMask/InGameInterface
    ContentType = ContentType_Texture_UI_Ingame
)

template TUIResourceTexture_AfterMaster_UnlockedByDLC
[
    FileName : string,
    FileNameToUseWithDlc : string,
    DlcId : int
] is TUIResourceTextureUnlockedByDLC
(
    FileName = <FileName>
    FileNameToUseWithDlc = <FileNameToUseWithDlc>
    DlcId = <DlcId>
    UsefulnessMask = CivMask/Common + TypeMask/InterfaceAfterMaster
    ContentType = ContentType_Texture_UI_AfterMaster
)

template TUIResourceTexture_MapPack_UnlockedByDLC
[
    FileName : string,
    FileNameToUseWithDlc : string,
    DlcId : int
] is TUIResourceTextureUnlockedByDLC
(
    FileName = <FileName>
    FileNameToUseWithDlc = <FileNameToUseWithDlc>
    DlcId = <DlcId>
    UsefulnessMask = CivMask/Common + TypeMask/OutGameMap
    ContentType = ContentType_Texture_UI_Map
)

//------------------------ Option ------------------------------------

template TUIResourceTexture_Common_UnlockedByOption
[
    FileNameToUseWhenOptionEnabled : string,
    FileNameToUseWhenOptionDisabled : string,
    SynchroneTextureSourceCarac : TTextureSourceCarac_FromFile = nil,
    Option : TEugBMutableBoolean,
    CommandName : string,
] is TUIResourceTextureUnlockedByOption
(
    FileName = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionEnabled = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionDisabled = <FileNameToUseWhenOptionDisabled>
    SynchroneTextureSourceCarac = <SynchroneTextureSourceCarac>
    Option = <Option>
    CommandName = <CommandName>
    UsefulnessMask = CivMask/Common + TypeMask/Common
    ContentType = ContentType_Texture_UI_Common
)

template TUIResourceTexture_CommonNoGen_UnlockedByOption
[
    FileNameToUseWhenOptionEnabled : string,
    FileNameToUseWhenOptionDisabled : string,
    SynchroneTextureSourceCarac : TTextureSourceCarac_FromFile = nil,
    Option : TEugBMutableBoolean,
    CommandName : string,
] is TUIResourceTextureUnlockedByOption
(
    FileName = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionEnabled = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionDisabled = <FileNameToUseWhenOptionDisabled>
    SynchroneTextureSourceCarac = <SynchroneTextureSourceCarac>
    Option = <Option>
    CommandName = <CommandName>
    UsefulnessMask = TypeMask/Common
    ContentType = ContentType_Texture_UI_Common
)

template TUIResourceTexture_OutGame_UnlockedByOption
[
    FileNameToUseWhenOptionEnabled : string,
    FileNameToUseWhenOptionDisabled : string,
    Option : TEugBMutableBoolean,
    CommandName : string,
] is TUIResourceTextureUnlockedByOption
(
    FileName = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionEnabled = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionDisabled = <FileNameToUseWhenOptionDisabled>
    Option = <Option>
    CommandName = <CommandName>
    UsefulnessMask = CivMask/Common + TypeMask/OutGameInterface
    ContentType = ContentType_Texture_UI_Outgame
)

template TUIResourceTexture_InGame_UnlockedByOption
[
    FileNameToUseWhenOptionEnabled : string,
    FileNameToUseWhenOptionDisabled : string,
    Option : TEugBMutableBoolean,
    CommandName : string,
] is TUIResourceTextureUnlockedByOption
(
    FileName = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionEnabled = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionDisabled = <FileNameToUseWhenOptionDisabled>
    Option = <Option>
    CommandName = <CommandName>
    UsefulnessMask = CivMask/Common + TypeMask/InGameInterface
    ContentType = ContentType_Texture_UI_Ingame
)

template TUIResourceTexture_AfterMaster_UnlockedByOption
[
    FileNameToUseWhenOptionEnabled : string,
    FileNameToUseWhenOptionDisabled : string,
    Option : TEugBMutableBoolean,
    CommandName : string,
] is TUIResourceTextureUnlockedByOption
(
    FileName = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionEnabled = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionDisabled = <FileNameToUseWhenOptionDisabled>
    Option = <Option>
    CommandName = <CommandName>
    UsefulnessMask = CivMask/Common + TypeMask/InterfaceAfterMaster
    ContentType = ContentType_Texture_UI_AfterMaster
)

template TUIResourceTexture_MapPack_UnlockedByOption
[
    FileNameToUseWhenOptionEnabled : string,
    FileNameToUseWhenOptionDisabled : string,
    Option : TEugBMutableBoolean,
    CommandName : string,
] is TUIResourceTextureUnlockedByOption
(
    FileName = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionEnabled = <FileNameToUseWhenOptionEnabled>
    FileNameToUseWhenOptionDisabled = <FileNameToUseWhenOptionDisabled>
    Option = <Option>
    CommandName = <CommandName>
    UsefulnessMask = CivMask/Common + TypeMask/OutGameMap
    ContentType = ContentType_Texture_UI_Map
)
