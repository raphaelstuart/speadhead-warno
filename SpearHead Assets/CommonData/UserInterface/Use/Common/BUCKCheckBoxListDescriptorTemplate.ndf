private template CheckboxDefinition
[
    ElementName : string = "",
    ToggleListButtonText : string = "",
    Margins : TRTTILength = TRTTILength(Magnifiable = 0.0),
    IsMainCheckbox : bool = false,
]
is BUCKListDescriptor
(
    ElementName = <ElementName> + 'CheckBoxComponent'

    ComponentFrame = TUIFramePropertyRTTI
    (
    )

    InterItemMargin = TRTTILength( Magnifiable = 6.0)
    Axis = ~/ListAxis/Horizontal
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    FirstMargin = <Margins>
    LastMargin = <Margins>

    Elements =
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKSpecificCheckBoxDescriptor
            (
                ElementName = <ElementName> + 'CheckBox'
                ComponentFrame = TUIFramePropertyRTTI
                (
                    MagnifiableWidthHeight = [16.0, 16.0]
                )

                ClickSound = ~/ButtonClickSound
            )
        ),

        BUCKListElementDescriptor
        (
            ComponentDescriptor = BUCKButtonDescriptor
            (
                ElementName = <ElementName>

                ComponentFrame = TUIFramePropertyRTTI
                (
                    RelativeWidthHeight = [0.0, 1.0]
                )

                IsTogglable = true

                FitStyle = ~/ContainerFitStyle/FitToContentHorizontally

                Components =
                [
                    BUCKTextDescriptor
                    (
                        ElementName = <ElementName> + 'CheckBoxText'

                        TextDico = ~/LocalisationConstantes/dico_interface_outgame
                        TextToken = <ToggleListButtonText>
                        TextSize = "15"
                        TextColor = "ButtonSimple/TextBleuGris"
                        TextStyle = 'Default'
                        TypefaceToken = 'Main'

                        ComponentStateLocked = (<IsMainCheckbox> ? false : true)

                        HorizontalFitStyle = ~/FitStyle/FitToContent
                        VerticalFitStyle = ~/FitStyle/FitToParent

                        ParagraphStyle = TParagraphStyleRTTI
                        (
                            VerticalAlignment = ~/UIText_VerticalCenter
                        )
                        TextPadding = TRTTILength4( Magnifiable = [5.0, 5.0, 25.0, 5.0] )
                    ),
                ]
            )
        ),
    ]
)

//------------------------------------------------

private template CheckboxRackDescriptor
[
    ElementName : string = "",
] is BUCKRackDescriptor
(
    ElementName = <ElementName> + "CheckboxRack"

    ComponentFrame = TUIFramePropertyRTTI
    (
    )

    Axis = ~/ListAxis/Vertical
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

    FirstMargin = TRTTILength(Magnifiable = 10.0)
    InterItemMargin = TRTTILength(Magnifiable = 10.0)

    BladeDescriptor = CheckboxDefinition
    (
        Margins = TRTTILength(Magnifiable = 20.0)
    )
)

//------------------------------------------------

private template CategoryComponent
[
    ElementName : string = "",
    CategorySeparation : int,
] is BUCKListDescriptor
(
    ComponentFrame = TUIFramePropertyRTTI
    (
    )

    Axis = ~/ListAxis/Vertical
    BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestBetweenFatherAndChildren

    FirstMargin = TRTTILength(Magnifiable = 1.0)
    InterItemMargin = TRTTILength(Magnifiable = 2.0)

    Elements =
    (   <CategorySeparation> == ~/ECheckBoxListSeparatorConfiguration/ShowLine ?
        [
            BUCKListElementDescriptor
            (
                ComponentDescriptor = BUCKContainerDescriptor
                (
                    ComponentFrame = TUIFramePropertyRTTI
                    (
                        RelativeWidthHeight = [1.0, 0.0]
                        PixelWidthHeight = [0, 1]
                        AlignementToFather = [0.5, 0.0]
                        AlignementToAnchor = [0.5, 0.0]
                    )

                    HasBorder = true
                    BorderThicknessToken = "1"
                    BorderLineColorToken = "SD2_LigneBleuGris"
                )
            )
        ] :
        (   <CategorySeparation> == ~/ECheckBoxListSeparatorConfiguration/ShowCategoryName ?
            [
                BUCKListElementDescriptor
                (
                    ComponentDescriptor = BUCKTextDescriptor
                    (
                        ElementName = "CategoryName"

                        ComponentFrame = TUIFramePropertyRTTI
                        (
                            RelativeWidthHeight = [1.0, 0.0]
                            AlignementToFather = [0.5, 0.0]
                            AlignementToAnchor = [0.5, 0.0]
                        )

                        ParagraphStyle = TParagraphStyleRTTI
                        (
                            Alignment = ~/UIText_Center
                            VerticalAlignment = ~/UIText_VerticalCenter
                            BigWordAction = ~/BigWordAction/BigWordCut
                        )

                        VerticalFitStyle = ~/FitStyle/FitToContent

                        TextStyle = 'Default'
                        TypefaceToken = 'Main'
                        TextSize = '12'
                        TextColor = 'Checkbox'
                        TextDico = ~/LocalisationConstantes/dico_interface_outgame

                    )
                )
            ] :
            []
        )
    )
    +
    [
        BUCKListElementDescriptor
        (
            ComponentDescriptor = CheckboxRackDescriptor
            (
            )
        )
    ]
)

//------------------------------------------------

ECheckBoxListSeparatorConfiguration is TBaseClass
(
    DoNotShow           is 0
    ShowLine            is 1
    ShowCategoryName    is 2
)

//------------------------------------------------

template BUCKCheckBoxListDescriptor
[
    // ++ BUCKContainerDescriptor
    ElementName : string = "",
    UniqueName : string = "",
    RequiredTags : LIST<string> = [],
    ForbiddenTags : LIST<string> = [],
    ComponentFrame : TUIFramePropertyRTTI = TUIFramePropertyRTTI(),

    MagnifierMultiplication : float = 0.0,

    PointerEventsToAllow : int = ~/EAllowablePointerEventType/None,
    HidePointerEvents : bool = false,

    GridAlign : bool = false,

    IsDroppable : bool = false,
    ForegroundForDropBlockColor : string = "",
    BorderForDropLineColor : string = "",
    BorderForDropLineThicknessToken : string = "",

    FitStyle : int = ~/ContainerFitStyle/FitToContent,
    ChildFitToContent : bool = false,

    ClipContent : bool = false,

    SpotlightComponent : TBUCKContainerDescriptor = nil,

    UniformDrawer : TUIUniformDrawer = $/UserInterface/UIUniformDrawer,

    HasBackground : bool = false,
    BackgroundBlockColorToken : string = "",

    HasBorder : bool = false,
    BordersToDraw : int = ~/TBorderSide/Default,
    BorderThicknessToken : string = "",
    BorderLineColorToken : string = "",
    BorderColorTokenBySide : LIST<PAIR<int, string>> = [],

    UseLocalRenderLayer : bool = false,
    BackgroundLocalRenderLayer : int = 0,
    LocalRenderLayer : int = 0,
    BorderLocalRenderLayer : int = 0,

    ComponentStateLocked : bool = false,

    // -- BUCKContainerDescriptor

    ToggleListButtonText : string = "BTN_FILTER",

    ListData : LIST<PAIR<string,LIST<Pair<string,int>>>> = [], // [ ("CategoryName", [("CheckboxName", DataValue),]),]

    CategorySeparation : int = ~/ECheckBoxListSeparatorConfiguration/ShowLine,

    MainButtonElementName : string = "ButtonComponent",
    CategoryRackElementName : string = "CheckboxCategoryRack",
]
is TBUCKCheckBoxListDescriptor
(
    // ++ BUCKContainerDescriptor
    ElementName = <ElementName>
    UniqueName = <UniqueName>
    RequiredTags = <RequiredTags>
    ForbiddenTags = <ForbiddenTags>
    ComponentFrame = <ComponentFrame>

    MagnifierMultiplication = <MagnifierMultiplication>

    PointerEventsToAllow = <PointerEventsToAllow>
    HidePointerEvents = <HidePointerEvents>

    GridAlign = <GridAlign>

    IsDroppable = <IsDroppable>
    ForegroundForDropBlockColor = <ForegroundForDropBlockColor>
    BorderForDropLineColor = <BorderForDropLineColor>
    BorderForDropLineThicknessToken = <BorderForDropLineThicknessToken>

    FitStyle = <FitStyle>
    ChildFitToContent = <ChildFitToContent>

    ClipContent = <ClipContent>

    SpotlightComponent = <SpotlightComponent>

    UniformDrawer = <UniformDrawer>

    HasBackground = <HasBackground>
    BackgroundBlockColorToken = <BackgroundBlockColorToken>

    HasBorder = <HasBorder>
    BordersToDraw = <BordersToDraw>
    BorderThicknessToken = <BorderThicknessToken>
    BorderLineColorToken = <BorderLineColorToken>
    BorderColorTokenBySide = <BorderColorTokenBySide>

    UseLocalRenderLayer = <UseLocalRenderLayer>
    BackgroundLocalRenderLayer = <BackgroundLocalRenderLayer>
    LocalRenderLayer = <LocalRenderLayer>
    BorderLocalRenderLayer = <BorderLocalRenderLayer>

    ComponentStateLocked = <ComponentStateLocked>

    Components =
    [
        BUCKContainerDescriptor
        (
            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableWidthHeight = [0.0, CheckBoxDefaultHeight]
            )

            ChildFitToContent = true

            FitStyle = ~/ContainerFitStyle/FitToContentHorizontally

            Components =
            [
                CheckboxDefinition
                (
                    ElementName = <MainButtonElementName>
                    ToggleListButtonText = <ToggleListButtonText>
                    IsMainCheckbox = true
                )
            ]
        ),
        BUCKRackDescriptor
        (
            ElementName = <CategoryRackElementName>

            ComponentFrame = TUIFramePropertyRTTI
            (
                MagnifiableOffset = [0.0, CheckBoxDefaultHeight]
            )

            Axis = ~/ListAxis/Vertical
            BreadthComputationMode = ~/BreadthComputationMode/ComputeBreadthFromLargestChild

            HasBackground = true
            BackgroundBlockColorToken = 'SD2_BleuGris' //'Checkbox/Background'

            HidePointerEvents = true

            FirstMargin = TRTTILength(Magnifiable = 5.0)
            InterItemMargin = TRTTILength(Magnifiable = 10.0)
            LastMargin = TRTTILength(Magnifiable = 10.0)

            BladeDescriptor = CategoryComponent
            (
                CategorySeparation = <CategorySeparation>
            )
        )
    ]

    // -- BUCKContainerDescriptor

    ListData = <ListData>
    CategorySeparation = <CategorySeparation>

    MainButtonElementName = <MainButtonElementName>
    MainCheckboxElementName = <MainButtonElementName> + "CheckBox"
    CategoryRackElementName = <CategoryRackElementName>
)
